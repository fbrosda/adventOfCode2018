/*
 * This Groovy source file was generated by the Gradle 'init' task.
 */
package adventOfCode

import adventOfCode.day01.ChronalCalibration
import adventOfCode.day02.InventoryManagement
import adventOfCode.day03.SantaSuite
import adventOfCode.day04.SleepingGuard
import adventOfCode.day05.Alchemy
import adventOfCode.day06.ChronalCoordinates
import adventOfCode.day07.DAG
import adventOfCode.day08.LicenceTree
import adventOfCode.day09.MarbleGame
import adventOfCode.day10.StarLetters
import adventOfCode.day11.PowerLevel
import adventOfCode.day12.Plants
import adventOfCode.day13.CartMadness
import adventOfCode.day14.Recipes

import adventOfCode.day16.ChronalClassification
import adventOfCode.day17.ReservoirResearch
import adventOfCode.day18.Lumberyard
import adventOfCode.day19.InstructionPointer
import adventOfCode.day20.RegularMap
import adventOfCode.day21.ChronalConversion
import adventOfCode.day22.ModeMaze

class App {
    static void main(String[] args) {
        println '##################'
        println '# Advent of Code #'
        println '##################\n'

        // def day01 = new ChronalCalibration()
        // day01.printSolutions()

        // def day02 = new InventoryManagement()
        // day02.printSolutions()

        // def day03 = new SantaSuite()
        // day03.printSolutions()

        // def day04 = new SleepingGuard()
        // day04.printSolutions()

        // def day05 = new Alchemy()
        // day05.printSolutions()

        // def day06 = new ChronalCoordinates()
        // day06.printSolutions()

        // def day07 = new DAG()
        // day07.printSolutions()

        // def day08 = new LicenceTree()
        // day08.printSolutions()

        // def day09 = new MarbleGame()
        // day09.printSolutions()

        // def day10 = new StarLetters()
        // day10.printSolutions()

        // def day11 = new PowerLevel()
        // day11.printSolutions()

        // def day12 = new Plants()
        // day12.printSolutions()

        // def day13 = new CartMadness()
        // day13.printSolutions()

        // def day14 = new Recipes()
        // day14.printSolutions()

        // // def day15 = new Recipes()
        // // day15.printSolutions()

        // def day16 = new ChronalClassification()
        // day16.printSolutions()

        // def day17 = new ReservoirResearch()
        // day17.printSolutions()

        // def day18 = new Lumberyard()
        // day18.printSolutions()

        // def day19 = new InstructionPointer()
        // day19.printSolutions()

        // def day20 = new RegularMap()
        // day20.printSolutions()

        // def day21 = new ChronalConversion()
        // day21.printSolutions()

        def day22 = new ModeMaze()
        day22.printSolutions()
    }
}
